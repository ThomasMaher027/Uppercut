   (1) NewtonianFrame N 
   (2) RigidFrame E
   (3) RigidBody B, Av, M
   (4) Particle MotE, MotC, MotM
   (5) System S1(E, MotE, B, MotC, Av, MotM, M), S2(B, MotC, Av, MotM, M), S3(Av, MotM, M)
   (6) Constant g = 9.81 m/s^2    % Earth's gravitational acceleration.
   (7) %Constant mB = 0.340 kg, mAv = 0.100 kg, mM = 0.090 kg
   (8) Constant mB = 0.340 kg, mAv = 0.070 kg, mM = 0.090 kg
   (9) %Constant mB = 0.340 kg, mAv = 0.050 kg, mM = 0.090 kg
   (10) Constant mMotp = 0.060 kg
   (11) Constant mMotg = 0.090 kg
   (12) %Constant Lb = 0.250 m, LAv = 0.200 m, LM = 0.180 m
   (13) %Constant Lb = 0.250 m, LAv = 0.100 m, LM = 0.180 m
   (14) Constant Lb = 0.220 m, LAv = 0.150 m, LM = 0.120 m
   (15) %Constant LBcmz = 0.120 m, LBcmy = 0.040 m
   (16) %Constant LAvcmz = 0.076 m, LAvcmy = 0.005 m
   (17) %Constant LMcmz = 0.062 m
   (18) Constant LBcmz = 0.1105 m, LBcmy = 0.0006 m, LBcmx = 0.0125 m
   (19) Constant LAvcmz = 0.07206 m, LAvcmx = 0.0015 m
   (20) Constant LMcmz = 0.03170 m, LMcmy = 0.001 m, LMcmx = 0.0002 m 
   (21) Constant dMotM = 0.040 m
   (22) Constant dMotE = 0.040 m
   (23) Constant qc = 0 deg
   (24) %Variable qe'', Tb, Tc
   (25) %Constant qb = 0 deg, Te = 2.95 N*m
   (26) Variable qb'', Te, Tc
   (27) Constant qe = -90 deg, Tb = 2.95 N*m
   (28) M.SetMass(mM)
   (29) Av.SetMass(mAv)
   (30) B.SetMass(mB)
   (31) MotC.SetMass(mMotp)
   (32) MotM.SetMass(mMotp)
   (33) MotE.SetMass(mMotg)
   (34) B.SetInertia(Bcm, IBxx = 0.00136096 kg*m^2, IByy = 0.00105899 kg*m^2, IBzz = 0.00064248 kg*m^2,  IBxy = -0.00000034 kg*m^2, IByz =  -0.00001995 kg*m^2, IBzx = -0.00012044 kg*m^2)
   (35) Av.SetInertia(Avcm, IAvxx = 0.00018089 kg*m^2, IAvyy = 0.00011084 kg*m^2, IAvzz = 0.00007775 kg*m^2,  IAvxy = 0 kg*m^2, IAvyz =  0 kg*m^2, IAvzx = 0.00000058 kg*m^2)
   (36) M.SetInertia(Mcm, IMxx = 0.00016081 kg*m^2, IMyy = 0.00012716 kg*m^2, IMzz = 0.00003633 kg*m^2,  IMxy = 0.00000009 kg*m^2, IMyz =  -0.00000214 kg*m^2, IMzx = -0.00000098 kg*m^2)
   (37) E.RotateX(N, qe)
-> (38) E_N = [1, 0, 0;  0, cos(qe), sin(qe);  0, -sin(qe), cos(qe)]
-> (39) w_E_N> = 0>
-> (40) alf_E_N> = 0>

   (41) B.RotateY(E, qb)
-> (42) B_E = [cos(qb), 0, -sin(qb);  0, 1, 0;  sin(qb), 0, cos(qb)]
-> (43) w_B_E> = qb'*By>
-> (44) w_B_N> = qb'*By>
-> (45) alf_B_E> = qb''*By>
-> (46) alf_B_N> = qb''*By>

   (47) Av.RotateY(B, qc)
-> (48) Av_B = [cos(qc), 0, -sin(qc);  0, 1, 0;  sin(qc), 0, cos(qc)]
-> (49) w_Av_B> = 0>
-> (50) w_Av_N> = qb'*Avy>
-> (51) alf_Av_B> = 0>
-> (52) alf_Av_N> = qb''*Avy>

   (53) M.RotateY(B, qc)
-> (54) M_B = [cos(qc), 0, -sin(qc);  0, 1, 0;  sin(qc), 0, cos(qc)]
-> (55) w_M_B> = 0>
-> (56) w_M_N> = qb'*My>
-> (57) alf_M_B> = 0>
-> (58) alf_M_N> = qb''*My>

   (59) Eo.Translate(No, 0>)
-> (60) p_No_Eo> = 0>
-> (61) v_Eo_N> = 0>
-> (62) a_Eo_N> = 0>

   (63) MotE.Translate(Eo, dMotE*ey>)
-> (64) p_Eo_MotE> = dMotE*Ey>
-> (65) v_MotE_N> = 0>
-> (66) a_MotE_N> = 0>

   (67) Bo.Translate(Eo, 0>)
-> (68) p_Eo_Bo> = 0>
-> (69) v_Bo_N> = 0>
-> (70) a_Bo_N> = 0>

   (71) Bcm.Translate(Bo,-LBcmz*bz> + LBcmy*by> + LBcmx*bx>) 
-> (72) p_Bo_Bcm> = LBcmx*Bx> + LBcmy*By> - LBcmz*Bz>
-> (73) v_Bcm_N> = -LBcmz*qb'*Bx> - LBcmx*qb'*Bz>
-> (74) a_Bcm_N> = (-LBcmx*qb'^2-LBcmz*qb'')*Bx> + (LBcmz*qb'^2-LBcmx*qb'')*Bz>

   (75) MotC.Translate(Bo, (-(3*Lb)/4)*bz>)
-> (76) p_Bo_MotC> = -0.75*Lb*Bz>
-> (77) v_MotC_N> = -0.75*Lb*qb'*Bx>
-> (78) a_MotC_N> = -0.75*Lb*qb''*Bx> + 0.75*Lb*qb'^2*Bz>

   (79) Avo.Translate(Bo, -Lb*bz>)
-> (80) p_Bo_Avo> = -Lb*Bz>
-> (81) v_Avo_N> = -Lb*qb'*Bx>
-> (82) a_Avo_N> = -Lb*qb''*Bx> + Lb*qb'^2*Bz>

   (83) Avcm.Translate(Avo,-LAvcmz*Avz> + LAvcmx*Avx>)
-> (84) p_Avo_Avcm> = LAvcmx*Avx> - LAvcmz*Avz>
-> (85) v_Avcm_N> = -LAvcmz*qb'*Avx> - LAvcmx*qb'*Avz> - Lb*qb'*Bx>
-> (86) a_Avcm_N> = (-LAvcmx*qb'^2-LAvcmz*qb'')*Avx> + (LAvcmz*qb'^2-LAvcmx*qb
        '')*Avz> - Lb*qb''*Bx> + Lb*qb'^2*Bz>

   (87) MotM.Translate(Avo, -dMotM*Avz>)
-> (88) p_Avo_MotM> = -dMotM*Avz>
-> (89) v_MotM_N> = -dMotM*qb'*Avx> - Lb*qb'*Bx>
-> (90) a_MotM_N> = -dMotM*qb''*Avx> + dMotM*qb'^2*Avz> - Lb*qb''*Bx> + Lb*qb'^2*Bz>

   (91) Mo.Translate(Avo, -LAv*Avz>)
-> (92) p_Avo_Mo> = -LAv*Avz>
-> (93) v_Mo_N> = -LAv*qb'*Avx> - Lb*qb'*Bx>
-> (94) a_Mo_N> = -LAv*qb''*Avx> + LAv*qb'^2*Avz> - Lb*qb''*Bx> + Lb*qb'^2*Bz>

   (95) Mcm.Translate(Mo, -LMcmz*Mz> + LMcmy*My> + LMcmx*Mx>) 
-> (96) p_Mo_Mcm> = LMcmx*Mx> + LMcmy*My> - LMcmz*Mz>
-> (97) v_Mcm_N> = -LAv*qb'*Avx> - Lb*qb'*Bx> - LMcmz*qb'*Mx> - LMcmx*qb'*Mz>
-> (98) a_Mcm_N> = -LAv*qb''*Avx> + LAv*qb'^2*Avz> - Lb*qb''*Bx> + Lb*qb'^2*Bz>
        + (-LMcmx*qb'^2-LMcmz*qb'')*Mx> + (LMcmz*qb'^2-LMcmx*qb'')*Mz>

   (99) System.AddForceGravity(-g*Ny>)            % Add's gravity force to each massive object.
-> (100) Force_Avcm> = -g*mAv*Ny>
-> (101) Force_Bcm> = -g*mB*Ny>
-> (102) Force_Mcm> = -g*mM*Ny>
-> (103) Force_MotC> = -g*mMotp*Ny>
-> (104) Force_MotE> = -g*mMotg*Ny>
-> (105) Force_MotM> = -g*mMotp*Ny>

   (106) E.AddTorque(N, Te*nx>)
-> (107) Torque_E_N> = Te*Nx>

   (108) B.AddTorque(E, Tb*ey>)
-> (109) Torque_B_E> = Tb*Ey>

   (110) Av.AddTorque(B, Tc*ey>)
-> (111) Torque_Av_B> = Tc*Ey>

   (112) %-------------- Définition des équations scalaires ----------%
   (113) EQ[1] = Dot(S1.GetDynamics(Eo), nx>)
-> (114) EQ[1] = g*Lb*mAv*cos(qe)*cos(qb) + g*Lb*mM*cos(qe)*cos(qb) + g*LBcmx*
         mB*cos(qe)*sin(qb) + g*LBcmz*mB*cos(qe)*cos(qb) + 1.75*g*Lb*mMotp*cos(
         qe)*cos(qb) + dMotM*g*mMotp*cos(qe)*cos(qc+qb) + g*LAv*mM*cos(qe)*cos(
         qc+qb) + g*LAvcmx*mAv*cos(qe)*sin(qc+qb) + g*LAvcmz*mAv*cos(qe)*cos(
         qc+qb) + g*LMcmx*mM*cos(qe)*sin(qc+qb) + g*LMcmz*mM*cos(qe)*cos(qc+qb)
         + cos(qc+qb)*(IAvyz*qb'^2+LAv*LMcmy*mM*qb'^2+IAvxy*qb'') + cos(qc+qb)*
         (IMyz*qb'^2+IMxy*qb''+LMcmy*mM*(LMcmz*qb'^2-LMcmx*qb'')) + cos(qb)*(
         IByz*qb'^2+Lb*LMcmy*mM*qb'^2+IBxy*qb''+LBcmy*mB*(LBcmz*qb'^2-LBcmx*qb
         '')) - dMotE*g*mMotg*sin(qe) - g*LBcmy*mB*sin(qe) - g*LMcmy*mM*sin(qe)
         - Te - sin(qc+qb)*(IAvxy*qb'^2-IAvyz*qb''-LAv*LMcmy*mM*qb'') - sin(qc+
         qb)*(IMxy*qb'^2-IMyz*qb''-LMcmy*mM*(LMcmx*qb'^2+LMcmz*qb'')) - sin(qb)
         *(IBxy*qb'^2-IByz*qb''-Lb*LMcmy*mM*qb''-LBcmy*mB*(LBcmx*qb'^2+LBcmz*
         qb''))

   (115) EQ[2] = Dot(S2.GetDynamics(Bo), ey>)
-> (116) EQ[2] = g*sin(qe)*(LBcmx*mB*cos(qb)+LAvcmx*mAv*cos(qc+qb)+LMcmx*mM*cos
         (qc+qb)-1.75*Lb*mMotp*sin(qb)-Lb*mAv*sin(qb)-Lb*mM*sin(qb)-LBcmz*mB*
         sin(qb)-dMotM*mMotp*sin(qc+qb)-LAv*mM*sin(qc+qb)-LAvcmz*mAv*sin(qc+qb)
         -LMcmz*mM*sin(qc+qb)) + IAvyy*qb'' + IByy*qb'' + IMyy*qb'' + mAv*LAvcmx^2*qb''
         + mAv*LAvcmz^2*qb'' + mAv*Lb^2*qb'' + mB*LBcmx^2*qb'' + mB*LBcmz^2*qb''
         + mM*LAv^2*qb'' + mM*Lb^2*qb'' + mM*LMcmx^2*qb'' + mM*LMcmz^2*qb''
         + mMotp*dMotM^2*qb'' + 1.5625*mMotp*Lb^2*qb'' + 2*LAv*LMcmz*mM*qb''
         + 2*dMotM*Lb*mMotp*cos(qc)*qb'' + 2*LAv*Lb*mM*cos(qc)*qb'' + 2*LAvcmx*
         Lb*mAv*sin(qc)*qb'' + 2*LAvcmz*Lb*mAv*cos(qc)*qb'' + 2*Lb*LMcmx*mM*sin
         (qc)*qb'' + 2*Lb*LMcmz*mM*cos(qc)*qb'' - Tb

   (117) EQ[3] = Dot(S3.GetDynamics(Avo), Avy>)
-> (118) EQ[3] = g*sin(qe)*(LAvcmx*mAv*cos(qc+qb)+LMcmx*mM*cos(qc+qb)-dMotM*mM
         otp*sin(qc+qb)-LAv*mM*sin(qc+qb)-LAvcmz*mAv*sin(qc+qb)-LMcmz*mM*sin(
         qc+qb)) + IAvyy*qb'' + IMyy*qb'' + mAv*LAvcmx^2*qb'' + mAv*LAvcmz^2*qb''
         + mM*LAv^2*qb'' + mM*LMcmx^2*qb'' + mM*LMcmz^2*qb'' + mMotp*dMotM^2*qb''
         + 2*LAv*LMcmz*mM*qb'' - Tc - Lb*(LAvcmx*mAv*cos(qc)*qb'^2+LMcmx*mM*cos
         (qc)*qb'^2-dMotM*mMotp*sin(qc)*qb'^2-LAv*mM*sin(qc)*qb'^2-LAvcmz*mAv*
         sin(qc)*qb'^2-LMcmz*mM*sin(qc)*qb'^2-dMotM*mMotp*cos(qc)*qb''-LAv*mM*
         cos(qc)*qb''-LAvcmx*mAv*sin(qc)*qb''-LAvcmz*mAv*cos(qc)*qb''-LMcmx*mM*
         sin(qc)*qb''-LMcmz*mM*cos(qc)*qb'')

   (119) %----------------- Resolution -----------------%
   (120) %solve(Implicit,EQ, qe, Tb, Tc)
   (121) solve(Implicit,EQ, qb'', Te, Tc)
-> (122) qb'' = (dMotE*g*mMotg*sin(qe)+g*LBcmy*mB*sin(qe)+g*LMcmy*mM*sin(qe)+
         Te+IAvxy*sin(qc+qb)*qb'^2+(IBxy-LBcmx*LBcmy*mB)*sin(qb)*qb'^2+(IMxy-
         LMcmx*LMcmy*mM)*sin(qc+qb)*qb'^2-1.75*g*Lb*mMotp*cos(qe)*cos(qb)-g*Lb*
         mAv*cos(qe)*cos(qb)-g*Lb*mM*cos(qe)*cos(qb)-g*LBcmx*mB*cos(qe)*sin(qb)
         -g*LBcmz*mB*cos(qe)*cos(qb)-dMotM*g*mMotp*cos(qe)*cos(qc+qb)-g*LAv*mM*
         cos(qe)*cos(qc+qb)-g*LAvcmx*mAv*cos(qe)*sin(qc+qb)-g*LAvcmz*mAv*cos(
         qe)*cos(qc+qb)-g*LMcmx*mM*cos(qe)*sin(qc+qb)-g*LMcmz*mM*cos(qe)*cos(
         qc+qb)-(IAvyz+LAv*LMcmy*mM)*cos(qc+qb)*qb'^2-(IMyz+LMcmy*LMcmz*mM)*cos
         (qc+qb)*qb'^2-(IByz+Lb*LMcmy*mM+LBcmy*LBcmz*mB)*cos(qb)*qb'^2)/(IAvxy*
         cos(qc+qb)+(IAvyz+LAv*LMcmy*mM)*sin(qc+qb)+(IBxy-LBcmx*LBcmy*mB)*cos(
         qb)+(IMyz+LMcmy*LMcmz*mM)*sin(qc+qb)+(IMxy-LMcmx*LMcmy*mM)*cos(qc+qb)+
         (IByz+Lb*LMcmy*mM+LBcmy*LBcmz*mB)*sin(qb))

-> (123) Te = g*Lb*mAv*cos(qe)*cos(qb) + g*Lb*mM*cos(qe)*cos(qb) + g*LBcmx*mB*
         cos(qe)*sin(qb) + g*LBcmz*mB*cos(qe)*cos(qb) + 1.75*g*Lb*mMotp*cos(qe)*cos(qb)
         + dMotM*g*mMotp*cos(qe)*cos(qc+qb) + g*LAv*mM*cos(qe)*cos(qc+qb)
         + g*LAvcmx*mAv*cos(qe)*sin(qc+qb) + g*LAvcmz*mAv*cos(qe)*cos(qc+qb)
         + g*LMcmx*mM*cos(qe)*sin(qc+qb) + g*LMcmz*mM*cos(qe)*cos(qc+qb) + (IA
         vxy*cos(qc+qb)+(IAvyz+LAv*LMcmy*mM)*sin(qc+qb)+(IBxy-LBcmx*LBcmy*mB)*
         cos(qb)+(IMyz+LMcmy*LMcmz*mM)*sin(qc+qb)+(IMxy-LMcmx*LMcmy*mM)*cos(qc+
         qb)+(IByz+Lb*LMcmy*mM+LBcmy*LBcmz*mB)*sin(qb))*(Tb-g*sin(qe)*(LBcmx*
         mB*cos(qb)+LAvcmx*mAv*cos(qc+qb)+LMcmx*mM*cos(qc+qb)-1.75*Lb*mMotp*sin
         (qb)-Lb*mAv*sin(qb)-Lb*mM*sin(qb)-LBcmz*mB*sin(qb)-dMotM*mMotp*sin(qc+
         qb)-LAv*mM*sin(qc+qb)-LAvcmz*mAv*sin(qc+qb)-LMcmz*mM*sin(qc+qb)))/(IA
         vyy+IByy+IMyy+mAv*LAvcmx^2+mAv*LAvcmz^2+mAv*Lb^2+mB*LBcmx^2+mB*LBcmz^2
         +mM*LAv^2+mM*Lb^2+mM*LMcmx^2+mM*LMcmz^2+mMotp*dMotM^2+1.5625*mMotp*Lb^2
         +2*LAv*LMcmz*mM+2*dMotM*Lb*mMotp*cos(qc)+2*LAv*Lb*mM*cos(qc)+2*LAvcmx*
         Lb*mAv*sin(qc)+2*LAvcmz*Lb*mAv*cos(qc)+2*Lb*LMcmx*mM*sin(qc)+2*Lb*LMc
         mz*mM*cos(qc)) + (IAvyz+LAv*LMcmy*mM)*cos(qc+qb)*qb'^2 + (IMyz+LMcmy*
         LMcmz*mM)*cos(qc+qb)*qb'^2 + (IByz+Lb*LMcmy*mM+LBcmy*LBcmz*mB)*cos(qb)
         *qb'^2 - dMotE*g*mMotg*sin(qe) - g*LBcmy*mB*sin(qe) - g*LMcmy*mM*sin(qe)
         - IAvxy*sin(qc+qb)*qb'^2 - (IBxy-LBcmx*LBcmy*mB)*sin(qb)*qb'^2 - (IMxy
         -LMcmx*LMcmy*mM)*sin(qc+qb)*qb'^2

-> (124) Tc = g*sin(qe)*(LAvcmx*mAv*cos(qc+qb)+LMcmx*mM*cos(qc+qb)-dMotM*mMotp*
         sin(qc+qb)-LAv*mM*sin(qc+qb)-LAvcmz*mAv*sin(qc+qb)-LMcmz*mM*sin(qc+qb))
         + (IAvyy+IMyy+mAv*LAvcmx^2+mAv*LAvcmz^2+mM*LAv^2+mM*LMcmx^2+mM*LMcmz^2
         +mMotp*dMotM^2+2*LAv*LMcmz*mM+Lb*(dMotM*mMotp*cos(qc)+LAv*mM*cos(qc)+
         LAvcmx*mAv*sin(qc)+LAvcmz*mAv*cos(qc)+LMcmx*mM*sin(qc)+LMcmz*mM*cos(
         qc)))*qb'' - Lb*(LAvcmx*mAv*cos(qc)+LMcmx*mM*cos(qc)-dMotM*mMotp*sin(
         qc)-LAv*mM*sin(qc)-LAvcmz*mAv*sin(qc)-LMcmz*mM*sin(qc))*qb'^2

   (125) %Input  qe = 0 deg,      qe' = 0 rad/sec
   (126) Input  qb = 90 deg,      qb' = 0 rad/sec
   (127) Input  tFinal = 1 sec,  tStep = 0.01 sec,  absError = 1.0E-07,  relError = 1.0E-07
   (128) %OutputPlot  t sec, qe deg, qe' deg/s, qe'' deg/s^2,  Tb N*m, Tc N*m
   (129) %OutputPlot  t sec, Tb N*m, Tc N*m
   (130) %OutputPlot  t sec, qb deg, qb' deg/s, qb'' deg/s^2,  Te N*m, Tc N*m
   (131) OutputPlot  t sec, Te N*m, Tc N*m
   (132) ODE() 

   (133) quit
